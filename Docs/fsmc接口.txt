我想要使用FPGA解析FSMC协议（异步复用模式），现在我来描述这个FSMC的时序，它的时序分成访问时序和写入时序，要严格注重时序。
两种时序都分成地址和数据部分，在地址部分，两者的时序相同：
    NADV处于上升沿时，FPGA可以读取地址数据，用于判断地址是否符合指定地址，同时state直接被赋予NWE的值。如果地址符合，那么根据锁存地址的值的低CS_WIDTH位的值确定cs的第几位为高电平。
访问时序的数据部分：NOE处于上升沿时，FSMC可以读取数据到rd_data（取AD的低DATA_WIDTH位），并把cs置零。
写入时序的数据部分：把wr_data写入到AD[DATA_WIDTH-1:0]，NWE处于上升沿时，延迟几个时钟，把cs置零。
现在给你这样的一个模块接口列表，你来尝试写出这个fsmc接口模块，如果你对时序有什么不确定，你可以说出来。
AD[DATA_WIDTH-1:0]。
module fsmc_interface #(
    parameter ADDR_WIDTH = 18,   // 地址/数据总线位宽（根据硬件连接调整）
    parameter DATA_WIDTH = 16,   // 数据位宽（固定16位模式）
    parameter CS_WIDTH   = 2     // 片选地址位宽（AD[3:0]）
)(
    // ================= 物理接口 =================
    inout  [ADDR_WIDTH-1:0] AD, // 复用地址/数据总线
    input         NADV,          // 地址有效指示（低有效）
    input         NWE,           // 写使能（低有效）
    input         NOE,           // 读使能（低有效）
    
    // ================= 系统接口 =================
    input         clk,           // 主时钟（建议50-100MHz）
    input         reset_n,       // 异步复位（低有效）
    
    // ================= 用户接口 =================
    output logic [DATA_WIDTH-1:0] rd_data,  // 捕获的单片机读数据
    input  logic [DATA_WIDTH-1:0] wr_data, // 待模块写入的数据（需提前准备）
    output logic         state,   // 读写使能状态：高电平表示读，低电平表示写
    output logic [2**CS_WIDTH-1:0] cs    // 片选信号来自地址低位
);

// -----------------------独立模块----------------------
// cs为高电平时，通过wr判断是什么时序
// 读取时序：CS处于下降沿，可以读取数据
// 写入时序：CS处于上升沿，可以写入数据