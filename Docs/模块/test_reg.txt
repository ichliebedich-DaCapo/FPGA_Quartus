我需要设计一个FPGA的内部模块（全局同一个时钟），它的作用是把写入到该模块的值存起来，需要的时候再输出出去，相当于一个寄存器。
现在我来描述一下它的时序，它的时序一共分为读时序和写时序。当en拉高，表示要使用这个模块，那么此时根据state的电平来判断是哪个时序。
读时序：那么就在en下降沿时，读取rd_data的值存到一个寄存器里。
写时序：那么就立刻把刚才寄存器里的值写入到wr_data里，直到en再次拉低。
现在给你这样的一个模块接口列表，你来尝试写出这个模块，我希望你要严格按照时序，尤其是时钟边沿，我并不希望引入过多延迟。
module test_reg #(
    parameter DATA_WIDTH = 16              // 数据位宽
)(
    // ================= 物理接口 =================
    // 暂无
    
    // ================= 系统接口 =================
    input         clk,                // 主时钟
    input         reset_n,            // 异步复位
    
    // ================= 用户接口 =================
    input  logic         en,          // 使能，高电平表示可以执行了。
    input  logic [DATA_WIDTH-1:0] rd_data,
    output logic [DATA_WIDTH-1:0] wr_data,
    input logic         state,       // 1:读 0:写
);