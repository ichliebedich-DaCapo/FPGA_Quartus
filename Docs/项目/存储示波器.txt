单片机向FPGA发送指令，以完成这些任务：修改采样频率、进行FFT、读取ADC的值、改变触发模式
修改采样频率：存放一个分频寄存器，输出特定频率给ADC采样模块
读取ADC的值：即ADC采样模块，满足触发条件就进行采样，然后输出到wr_data，接不接收就是其他模块的事了。256个值，采样256次。
进行FFT：

单片机如何读取？FPGA要时刻都在采样吗？它俩怎么配合？我目前假设是单片机向FPGA发送指令，由FPGA执行，不知道FPGA通知单片机是否合适。




数据存储与处理：
接下来我们仔细讨论数据存储与处理模块，它的作用是在输入信号触发信号trigger为上升沿时，立刻开始采集信号到FIFO里。如果输入信号模式信号mode为高电平（假定高电平为高频模式），
那么就等待FIFO采集满了400个停止采集。然后开始把采满的400个数据依次从FIFO里取出到数组里，同时判断出这400个数据中的峰峰值和峰峰值的索引间隔。处理好之后，就把16位寄存器handle_state设置为1.
如果输入信号mode为低电平，即低频模式，那么不需要等待FIFO采集满了之后再停止，而是一直采集，边采集边存储，同时保存当前数据个数到16位寄存器low_count。在未满200个数据的时候，16位寄存器low_state设置1，
大于200个之后，low_state设置为2。使用的FIFO为异步FIFO，并且由IP核生成的。
前面的寄存器不要省略，因为这些寄存器是供单片机读取的。现在我给你接口列表，你来根据它来设计这个数据存储与处理模块。
同时，你需要注意一下内部接口的时序，当en为高电平时，表示要使用这个模块了，此时如果直接读取rd_data，那么得到的就是单片机发送的片选地址，用于区分前面提到的不同寄存器。
并且此刻需要根据片选地址找到对应的寄存器，并把数据写入到wr_data直到en拉低。这里的片选地址只有14位，即A[13:0]，其中A[13]为寄存器和存储器地址的区别，
0表示是存储器，也就是可以从前面的数组里读取数据，如果为1，那么就可以读取对应的寄存器。这里为了方便，先假设各个寄存器的地址
0010_0000_0000_0000: handle_state
0010_0000_0000_0001: low_count
0010_0000_0000_0010: low_state
后面地址留着以后扩充。接口列表如下，除了ADC_DATA，其他都是同步信号：
module data_storage_and_process #(
    parameter DATA_WIDTH = 16,              // 数据位宽
    parameter ADC_DATA_WIDTH = 12           // ADC数据位宽
)(
    // ================= 物理接口 =================
    // 暂无
    
    // ================= 系统接口 =================
    input         clk,                // 主时钟
    input         reset_n,            // 异步复位
    
    // ================= 用户接口 =================
    input  logic         en,          // 片选使能，高电平表示选中了该模块
    input  logic [DATA_WIDTH-1:0] rd_data,// 用于读取数据
    output logic [DATA_WIDTH-1:0] wr_data,
    input  logic        trigger,    // 触发信号
    input  logic        mode,        // 输入信号模式，高电平为高频模式，低电平为低频模式 
    input  logic [ADC_DATA_WIDTH-1:0] ADC_DATA
);